{"version":3,"sources":["components/Statistics/Statistics.style.jsx","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.styled.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Section/Section.style.jsx","components/Section/Section.jsx","App.js","reportWebVitals.js","index.js"],"names":["StatList","styled","ul","StatListItem","li","Statistics","feedBackState","positiveFeedbackPerc","goodFeedback","neutralFeedback","badFeedback","ActionButton","button","FacebookOptions","onIncrementFeedback","onClick","e","ContentSection","div","SectionTitle","p","Section","title","children","App","useState","setGoodFeedback","setNeutralFeedback","setBadFeedback","statistics","className","target","textContent","prevState","good","neutral","bad","resultPercent","parseInt","isNaN","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PAEaA,EAAWC,IAAOC,GAAV,+EAMRC,EAAeF,IAAOG,GAAV,kD,OCNlB,SAASC,EAAT,GAA8D,IAAxCC,EAAuC,EAAvCA,cAAeC,EAAwB,EAAxBA,qBACxC,cAAwDD,EAAxD,GAAQE,EAAR,KAAsBC,EAAtB,KAAuCC,EAAvC,KACA,OACI,eAACV,EAAD,WACI,eAACG,EAAD,oBAAqBK,KACrB,eAACL,EAAD,uBAAwBM,KACxB,eAACN,EAAD,mBAAoBO,KACpB,eAACP,EAAD,qBAAsBK,EAAeC,EAAkBC,KACvD,eAACP,EAAD,kCAAmCI,EAAqBC,EAAcC,EAAiBC,GAAvF,UCRL,I,IAAMC,EAAeV,IAAOW,OAAV,2GCClB,SAASC,EAAT,GAAiD,IAAvBC,EAAsB,EAAtBA,oBAC7B,OACI,qCACI,cAACH,EAAD,CAAcI,QAAS,SAAAC,GAAC,OAAIF,EAAoBE,IAAhD,kBACA,cAACL,EAAD,CAAcI,QAAS,SAAAC,GAAC,OAAIF,EAAoBE,IAAhD,qBACA,cAACL,EAAD,CAAcI,QAAS,SAAAC,GAAC,OAAIF,EAAoBE,IAAhD,oBCNL,IAAMC,EAAiBhB,IAAOiB,IAAV,gDAIdC,EAAelB,IAAOmB,EAAV,8FCJlB,SAASC,EAAT,GAAqC,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,SAC5B,OACI,eAACN,EAAD,WACI,cAACE,EAAD,UAAeG,IACdC,KC+CEC,MA/Cf,WACI,MAAwCC,mBAAS,GAAjD,mBAAOjB,EAAP,KAAqBkB,EAArB,KACA,EAA8CD,mBAAS,GAAvD,mBAAOhB,EAAP,KAAwBkB,EAAxB,KACA,EAAsCF,mBAAS,GAA/C,mBAAOf,EAAP,KAAoBkB,EAApB,KAyBMC,EAAarB,EAAeC,EAAkBC,IAAgB,EAEpE,OACI,sBAAKoB,UAAU,MAAf,UACI,cAACT,EAAD,CAASC,MAAO,wBAAhB,SACI,cAACT,EAAD,CAAiBC,oBA5BH,SAAC,GAEvB,OAFsC,EAAbiB,OACHC,aAElB,IAAK,OACDN,GAAgB,SAAAO,GAAS,OAAIA,EAAa,KAC1C,MACJ,IAAK,UACDN,GAAmB,SAAAM,GAAS,OAAIA,EAAa,KAC7C,MACJ,IAAK,MACDL,GAAe,SAAAK,GAAS,OAAIA,EAAa,WAoB7C,cAACZ,EAAD,CAASC,MAAO,aAAhB,SACKO,EACG,cAACxB,EAAD,CACIC,cAAe,CAACE,EAAcC,EAAiBC,GAC/CH,qBAjBoB,SAAC2B,EAAMC,EAASC,GACpD,IAAMC,EAAgBC,SAASJ,GAAQA,EAAOC,EAAUC,GAAO,KAE/D,OADwBG,MAAMF,GAAiB,EAAIA,KAiBvC,0DCnCLG,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c061b65f.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const StatList = styled.ul`\r\nlist-style: none;\r\npadding: 0;\r\nmargin-top: 20px;\r\n`;\r\n\r\nexport const StatListItem = styled.li`\r\nmargin-bottom: 10px;\r\n`;","import {StatList, StatListItem} from './Statistics.style'\r\n\r\nexport function Statistics({ feedBackState, positiveFeedbackPerc }) {\r\n    const [ goodFeedback, neutralFeedback, badFeedback ] =  feedBackState;\r\n    return (\r\n        <StatList>\r\n            <StatListItem>Good: {goodFeedback}</StatListItem>\r\n            <StatListItem>Neutral: {neutralFeedback}</StatListItem>\r\n            <StatListItem>Bad: {badFeedback}</StatListItem>\r\n            <StatListItem>Total: {goodFeedback + neutralFeedback + badFeedback}</StatListItem>\r\n            <StatListItem>Positive feedbacks: {positiveFeedbackPerc(goodFeedback, neutralFeedback, badFeedback)}%</StatListItem>\r\n        </StatList>\r\n    );\r\n}\r\n\r\n\r\n\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const ActionButton = styled.button`\r\ntext-transform: capitalize;\r\n\r\n:not(:last-child){\r\n    margin-right: 15px;\r\n}\r\n`;","import { ActionButton } from './FeedbackOptions.styled';\r\n\r\n\r\nexport function FacebookOptions({onIncrementFeedback}) {\r\n    return (\r\n        <>\r\n            <ActionButton onClick={e => onIncrementFeedback(e)}>Good</ActionButton>\r\n            <ActionButton onClick={e => onIncrementFeedback(e)}>Neutral</ActionButton>\r\n            <ActionButton onClick={e => onIncrementFeedback(e)}>Bad</ActionButton>\r\n        </>\r\n    );\r\n}\r\n\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const ContentSection = styled.div`\r\nmargin-left: 20px;\r\n`;\r\n\r\nexport const SectionTitle = styled.p`\r\ntext-transform: capitalize;\r\nfont-weight: 600;\r\nfont-size: 26px;\r\n`;\r\n","import { ContentSection, SectionTitle } from './Section.style'\r\n\r\nexport function Section({title, children}) {\r\n    return (\r\n        <ContentSection>\r\n            <SectionTitle>{title}</SectionTitle>\r\n            {children}\r\n        </ContentSection>\r\n    );\r\n}\r\n","import { useState } from \"react\";\nimport { Statistics } from \"components/Statistics/Statistics\"\nimport { FacebookOptions } from \"components/FeedbackOptions/FeedbackOptions\"\nimport { Section } from \"components/Section/Section\";\n\n\nfunction App() {\n    const [goodFeedback, setGoodFeedback] = useState(0);\n    const [neutralFeedback, setNeutralFeedback] = useState(0);\n    const [badFeedback, setBadFeedback] = useState(0);\n\n    const incrementFeedback = ({ target }) => {\n        const button = target.textContent;\n        switch (button) {\n            case \"Good\":\n                setGoodFeedback(prevState => prevState += 1);\n                break;\n            case \"Neutral\":\n                setNeutralFeedback(prevState => prevState += 1);\n                break;\n            case \"Bad\":\n                setBadFeedback(prevState => prevState += 1);\n                break;\n            default:\n                break;\n        }\n    };\n\n    const countPositiveFeedbackPercentage = (good, neutral, bad) => {\n        const resultPercent = parseInt(good / (good + neutral + bad) * 100);\n        const resultFeedbacks = isNaN(resultPercent) ? 0 : resultPercent\n        return resultFeedbacks;\n    };\n\n    const statistics = goodFeedback + neutralFeedback + badFeedback !== 0 ? true : false;\n\n    return (\n        <div className=\"App\">\n            <Section title={'Please leave feedback'}>\n                <FacebookOptions onIncrementFeedback={incrementFeedback} />\n            </Section>\n            <Section title={'Statistics'}>\n                {statistics ?\n                    <Statistics\n                        feedBackState={[goodFeedback, neutralFeedback, badFeedback]}\n                        positiveFeedbackPerc={countPositiveFeedbackPercentage}>\n                    </Statistics> :\n                    <div>No feedback given</div>}\n            </Section>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}